name: Multi-env-deployment
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy'
        required: true
        default: 'poc'
        options:
          - prod
          - test
          - poc
      branch_to_deploy:
        description: Branch to checkout before performing terraform commands
        type: string
        required: true
env:
  MONGODB_DB_NAME: gha-demo
jobs:
  setup:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      MONGODB_CLUSTER_ADDRESS: cluster-test.23s6fxx.mongodb.net
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
      APP_ENV: ${{ vars.APP_ENV }}
      APP_OWNER: ${{ vars.APP_OWNER }}
      APP_VERSION: ${{ vars.APP_VERSION }}
    steps:
      # 1. 首先检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          clean: false
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_to_deploy }}

      - name: Display Custom Linux Environment
        run: |
          echo "APP_ENV: $APP_ENV"
          echo "APP_OWNER: $APP_OWNER"
          echo "APP_VERSION: $APP_VERSION"
      
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      
      # 2. 然后使用本地 action
      - name: Setup Node.js Application
        uses: ./.github/actions/nodejs-setup
        with:
          port: ${{ env.PORT }}
      
      - name: Output Information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"

  deploy:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Output Information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
      
      - name: Deploy to Environment
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "prod" ]]; then
            echo "Deploying to Production"
          elif [[ "${{ github.event.inputs.environment }}" == "test" ]]; then
            echo "Deploying to Test"
          elif [[ "${{ github.event.inputs.environment }}" == "poc" ]]; then
            echo "Deploying to POC"
          fi
